{"version":3,"sources":["./src/app/pages/local-weather/local-weather.page.html","./src/app/pages/local-weather/local-weather.module.ts","./src/app/pages/local-weather/local-weather.page.scss","./src/app/pages/local-weather/local-weather.page.ts"],"names":[],"mappings":"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","file":"pages-local-weather-local-weather-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{ 'app.pages.localweather.title.header' | translate }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding animated fadeIn\\\">\\n\\n  <ion-card class=\\\"ion-no-margin ion-margin-bottom bg-primary\\\">\\n    <ion-card-content class=\\\"ion-no-padding\\\">\\n  \\n      <ion-item>\\n        <ion-label class=\\\"text-1x fw700\\\">\\n          <ion-text color=\\\"light\\\">{{ 'app.label.selectlocal' | translate }}</ion-text>\\n        </ion-label>\\n        <ion-select [(ngModel)]=\\\"location\\\" (ionChange)=\\\"getWeather(location)\\\">\\n          <ion-select-option *ngFor=\\\"let location of locationList\\\" [value]=\\\"location\\\">\\n            <ion-text color=\\\"light\\\">{{ location.city }}</ion-text>\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n  \\n    </ion-card-content>\\n  </ion-card>\\n  \\n  <ion-card class=\\\"ion-no-margin bg-white\\\">\\n    <ion-card-content class=\\\"ion-no-padding\\\">\\n    <ion-grid class=\\\"ion-padding\\\" *ngIf=\\\"weather\\\">\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <h1 class=\\\"location text-dark\\\">{{weather.name}}</h1>\\n          <!-- <div class=\\\"icon\\\"><img src=\\\"{{weather.icon_url}}\\\" alt=\\\"weather\\\"></div> -->\\n          <h3 class=\\\"desc\\\"> {{weather.weather[0].description}}</h3>\\n          <h1 class=\\\"temp\\\"><strong>{{weather.main.temp - 273.15 | number:'1.0-0'}}&deg;</strong></h1>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-list>\\n    \\n            <ion-item>\\n              <strong>{{ 'app.pages.localweather.label.temp' | translate }}: </strong> {{weather.weather[0].main}}\\n            </ion-item>\\n            <ion-item>\\n              <strong>{{ 'app.pages.localweather.label.humidity' | translate }}: </strong> {{weather.main.humidity}}\\n            </ion-item>\\n            <ion-item>\\n              <strong>{{ 'app.pages.localweather.label.dewpoint' | translate }}: </strong> {{weather.main.pressure}}\\n            </ion-item>\\n            <ion-item>\\n              <strong>{{ 'app.pages.localweather.label.visibility' | translate }}: </strong> {{weather.visibility}}\\n            </ion-item>\\n            <ion-item>\\n              <strong>{{ 'app.pages.localweather.label.heatindex' | translate }}: </strong> {{weather.clouds.all}}\\n            </ion-item>\\n    \\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LocalWeatherPage } from './local-weather.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocalWeatherPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule.forChild(),\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LocalWeatherPage]\n})\nexport class LocalWeatherPageModule {}\n","export default \":host ion-content {\\n  --background: linear-gradient(-135deg, var(--ion-color-medium), var(--ion-color-light)) ;\\n}\\n\\nion-select {\\n  --color: var(--ion-color-light);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9jYWwtd2VhdGhlci9sb2NhbC13ZWF0aGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLHdGQUFBO0FBQUo7O0FBSUE7RUFDSSwrQkFBQTtBQURKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9jYWwtd2VhdGhlci9sb2NhbC13ZWF0aGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgaW9uLWNvbnRlbnQge1xuICAgIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KC0xMzVkZWcsIHZhcigtLWlvbi1jb2xvci1tZWRpdW0pLCB2YXIoLS1pb24tY29sb3ItbGlnaHQpKVxuICB9XG59XG5cbmlvbi1zZWxlY3Qge1xuICAgIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodCk7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { TranslateProvider, WeatherService } from '../../providers';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-local-weather',\n  templateUrl: './local-weather.page.html',\n  styleUrls: ['./local-weather.page.scss'],\n})\nexport class LocalWeatherPage implements OnInit {\n  weather: any;\n  location: {\n    state: string,\n    city: string\n  }\n\n  public locationList: Array<any> = [\n    { city: 'Los Angeles', state: 'US' },\n    { city: 'Miami', state: 'US' },\n    { city: 'New York', state: 'US' },\n    { city: 'Seattle', state: 'US' },\n    { city: 'SÃ£o Paulo', state: 'BR' }\n  ];\n\n  constructor(\n    public navCtrl: NavController,\n    private translate: TranslateProvider,\n    private weatherService: WeatherService,\n    private storage: Storage\n  ) { }\n\n  ngOnInit() {\n    this.storage.get('location').then((val) => {\n      if (val !== null) {\n        this.location = JSON.parse(val);\n      } else {\n        this.location = {\n          state: 'US',\n          city: 'New York'\n        }\n      }\n\n      this.getWeather(this.location)\n\n    });\n  }\n\n  getWeather(location) {\n    if (typeof location === 'string') {\n      this.location = JSON.parse(location);\n    } else {\n      this.location = location;\n    }\n\n    this.storage.set('location', JSON.stringify(this.location));\n\n    this.weatherService.getWeather(this.location.state, this.location.city).subscribe((weather: any) => {\n      this.weather = weather;\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}